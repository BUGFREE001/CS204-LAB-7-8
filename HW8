
#1

1）

Initially we have defined a variable r as 20, 
Then we have defined pinter p which contains address of r then p is passed by pointer in function fun where its value is changed to 10. 
Since it is passed by pointer. So, changes would also reflect in main.
Hence. the output is 10



-------------------------------------------------------------------------------------------------------------------------------

2）

In 2nd question it using function pointer.
Which means it is storing the address of function and then calling it with the value 10. 
So, it will print Value is 10



-------------------------------------------------------------------------------------------------------------------------------

#3


1)


i is initialized to 10. then 2 pointers ptr1 and ptr2 are declared.

ptr1 points to address of i.

And ptr2 is assigned with whatever value is returned by the function returnPointer with address of i as argument.

So, lets check what the function returns. So the function takes in the address of i as argument pt, 
then it simply returns that address.

So, ptr2 also points to address of i.

And when we try to print the values pointed
by ptr1 and ptr2 by dereferencing them (*ptr1 and *ptr2 returns values at the address pointed by the pointers), 
we get both as 10.


*ptr1 = 10
*ptr2 = 10




---------------------------------------------------------------------



2)


Output: Returned index is 2

Explanation: Here we iterate the array and try to find the value 7 in the array 
             if the value is found we return the array index otherwise return -1.
             7 is found at index location 2

             hence index 2 is returned



---------------------------------------------------------------------



3)

Output:


garbage
garbage
garbage

Output:

10
10
10

Explanation:

For the first code, i is local variable whose scope is till the function.
Once it comes out of function, the int i disappears and hence garbage value is printed

For the first code, i is static variable whose scope is throughout the program
Once it comes out of function, the int i value is printed which is 10










